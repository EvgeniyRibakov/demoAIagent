#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã —ç–º–æ–¥–∑–∏ –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import re
from pathlib import Path

def replace_emojis_in_file(file_path):
    """–ó–∞–º–µ–Ω—è–µ—Ç —ç–º–æ–¥–∑–∏ –≤ —Ñ–∞–π–ª–µ"""
    emoji_replacements = {
        '‚ùå': 'ERROR:',
        '‚úÖ': 'SUCCESS:',
        '‚ö†Ô∏è': 'WARNING:',
        'üîë': 'INFO:',
        'üìä': 'INFO:',
        'üíæ': 'INFO:',
        'ü§ñ': 'INFO:',
        'üöÄ': 'INFO:',
        'üìã': 'INFO:',
        'üéâ': 'SUCCESS:',
        'üìù': 'INFO:',
        'üîç': 'INFO:',
    }
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        for emoji, replacement in emoji_replacements.items():
            content = content.replace(emoji, replacement)
        
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"Fixed: {file_path}")
            return True
        return False
        
    except Exception as e:
        print(f"Error processing {file_path}: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    project_root = Path(__file__).parent
    src_dir = project_root / "src" / "ai_agent"
    
    if not src_dir.exists():
        print("Source directory not found")
        return
    
    fixed_files = 0
    total_files = 0
    
    for py_file in src_dir.rglob("*.py"):
        total_files += 1
        if replace_emojis_in_file(py_file):
            fixed_files += 1
    
    print(f"\nProcessed {total_files} files, fixed {fixed_files} files")

if __name__ == "__main__":
    main()
